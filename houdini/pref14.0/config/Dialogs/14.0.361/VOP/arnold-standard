// Magic: 18179834
// Automatically generated PSI dialog (PSI version 14.0.361)
// Fri Jul 24 15:19:14 2015


f_tmp = FLOAT_FIELD;	// dialog.top.ui

Kd_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    Kd_color.label = PARM_LABEL("Diffuse Color", "Kd_color") WIDTH(1.5);
    PARM(float, 3, "Kd_color", none, COLOR, "R,G,B") 
	LABELREF(Kd_color.label) HSTRETCH;

    Kd_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Kd_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Kd.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 Kd.label = PARM_LABEL("Diffuse", "Kd") WIDTH(1.5);
 PARM(float, 1, "Kd", none, none) RANGE(0,1)
	 LABELREF(Kd.label) HSTRETCH;

    Kd.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Kd.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

direct_diffuse.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 direct_diffuse.label = PARM_LABEL("Direct Diffuse", "direct_diffuse") WIDTH(1.5);
 PARM(float, 1, "direct_diffuse", none, none) RANGE(0,1)
	 LABELREF(direct_diffuse.label) HSTRETCH;

    direct_diffuse.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(direct_diffuse.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

indirect_diffuse.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 indirect_diffuse.label = PARM_LABEL("Indirect Diffuse", "indirect_diffuse") WIDTH(1.5);
 PARM(float, 1, "indirect_diffuse", none, none) RANGE(0,1)
	 LABELREF(indirect_diffuse.label) HSTRETCH;

    indirect_diffuse.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(indirect_diffuse.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

diffuse_roughness.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 diffuse_roughness.label = PARM_LABEL("Roughness", "diffuse_roughness") WIDTH(1.5);
 PARM(float, 1, "diffuse_roughness", none, none) RANGE(0,1)
	 LABELREF(diffuse_roughness.label) HSTRETCH;

    diffuse_roughness.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(diffuse_roughness.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Kb.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 Kb.label = PARM_LABEL("Backlight", "Kb") WIDTH(1.5);
 PARM(float, 1, "Kb", none, none) RANGE(0,1)
	 LABELREF(Kb.label) HSTRETCH;

    Kb.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Kb.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

bounce_factor.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 bounce_factor.label = PARM_LABEL("Bounce Factor", "bounce_factor") WIDTH(1.5);
 PARM(float, 1, "bounce_factor", none, none) RANGE(0,1)
	 LABELREF(bounce_factor.label) HSTRETCH;

    bounce_factor.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(bounce_factor.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Fresnel_affect_diff.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("Fresnel_affect_diff", "Compensate Fresnel Falloff") toggle VALUE(Fresnel_affect_diff.val);

    { HSTRETCH }

    Fresnel_affect_diff.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Fresnel_affect_diff.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Ks_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    Ks_color.label = PARM_LABEL("Specular Color", "Ks_color") WIDTH(1.5);
    PARM(float, 3, "Ks_color", none, COLOR, "R,G,B") 
	LABELREF(Ks_color.label) HSTRETCH;

    Ks_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Ks_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Ks.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 Ks.label = PARM_LABEL("Specular", "Ks") WIDTH(1.5);
 PARM(float, 1, "Ks", none, none) RANGE(0,1)
	 LABELREF(Ks.label) HSTRETCH;

    Ks.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Ks.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

direct_specular.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 direct_specular.label = PARM_LABEL("Direct Specular", "direct_specular") WIDTH(1.5);
 PARM(float, 1, "direct_specular", none, none) RANGE(0,1)
	 LABELREF(direct_specular.label) HSTRETCH;

    direct_specular.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(direct_specular.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

indirect_specular.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 indirect_specular.label = PARM_LABEL("Indirect Specular", "indirect_specular") WIDTH(1.5);
 PARM(float, 1, "indirect_specular", none, none) RANGE(0,1)
	 LABELREF(indirect_specular.label) HSTRETCH;

    indirect_specular.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(indirect_specular.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

specular_roughness.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 specular_roughness.label = PARM_LABEL("Roughness", "specular_roughness") WIDTH(1.5);
 PARM(float, 1, "specular_roughness", none, none) RANGE(0,1)
	 LABELREF(specular_roughness.label) HSTRETCH;

    specular_roughness.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(specular_roughness.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

specular_anisotropy.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 specular_anisotropy.label = PARM_LABEL("Anisotropy", "specular_anisotropy") WIDTH(1.5);
 PARM(float, 1, "specular_anisotropy", none, none) RANGE(0,1)
	 LABELREF(specular_anisotropy.label) HSTRETCH;

    specular_anisotropy.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(specular_anisotropy.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

specular_rotation.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 specular_rotation.label = PARM_LABEL("Rotation", "specular_rotation") WIDTH(1.5);
 PARM(float, 1, "specular_rotation", none, none) RANGE(-1,1)
	 LABELREF(specular_rotation.label) HSTRETCH;

    specular_rotation.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(specular_rotation.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

enable_glossy_caustics.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enable_glossy_caustics", "Glossy Caustics") toggle VALUE(enable_glossy_caustics.val);

    { HSTRETCH }

    enable_glossy_caustics.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enable_glossy_caustics.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

specular_Fresnel.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("specular_Fresnel", "Fresnel Falloff") toggle VALUE(specular_Fresnel.val);

    { HSTRETCH }

    specular_Fresnel.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(specular_Fresnel.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Ksn.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 Ksn.label = PARM_LABEL("Normal Reflectance", "Ksn") WIDTH(1.5);
 PARM(float, 1, "Ksn", none, none) RANGE(0,20)
	 LABELREF(Ksn.label) HSTRETCH;

    Ksn.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Ksn.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Kr_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    Kr_color.label = PARM_LABEL("Reflection Color", "Kr_color") WIDTH(1.5);
    PARM(float, 3, "Kr_color", none, COLOR, "R,G,B") 
	LABELREF(Kr_color.label) HSTRETCH;

    Kr_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Kr_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Kr.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 Kr.label = PARM_LABEL("Reflection", "Kr") WIDTH(1.5);
 PARM(float, 1, "Kr", none, none) RANGE(0,1)
	 LABELREF(Kr.label) HSTRETCH;

    Kr.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Kr.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

enable_reflective_caustics.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enable_reflective_caustics", "Reflective Caustics") toggle VALUE(enable_reflective_caustics.val);

    { HSTRETCH }

    enable_reflective_caustics.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enable_reflective_caustics.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Fresnel.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("Fresnel", "Fresnel Falloff") toggle VALUE(Fresnel.val);

    { HSTRETCH }

    Fresnel.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Fresnel.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Krn.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 Krn.label = PARM_LABEL("Normal Reflectance", "Krn") WIDTH(1.5);
 PARM(float, 1, "Krn", none, none) RANGE(0,20)
	 LABELREF(Krn.label) HSTRETCH;

    Krn.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Krn.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

reflection_exit_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    reflection_exit_color.label = PARM_LABEL("Exit Color", "reflection_exit_color") WIDTH(1.5);
    PARM(float, 3, "reflection_exit_color", none, COLOR, "R,G,B") 
	LABELREF(reflection_exit_color.label) HSTRETCH;

    reflection_exit_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(reflection_exit_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

reflection_exit_use_environment.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("reflection_exit_use_environment", "Environment Exit Color") toggle VALUE(reflection_exit_use_environment.val);

    { HSTRETCH }

    reflection_exit_use_environment.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(reflection_exit_use_environment.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Kt_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    Kt_color.label = PARM_LABEL("Transparency Color", "Kt_color") WIDTH(1.5);
    PARM(float, 3, "Kt_color", none, COLOR, "R,G,B") 
	LABELREF(Kt_color.label) HSTRETCH;

    Kt_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Kt_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Kt.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 Kt.label = PARM_LABEL("Transparency", "Kt") WIDTH(1.5);
 PARM(float, 1, "Kt", none, none) RANGE(0,1)
	 LABELREF(Kt.label) HSTRETCH;

    Kt.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Kt.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

refraction_roughness.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 refraction_roughness.label = PARM_LABEL("Roughness", "refraction_roughness") WIDTH(1.5);
 PARM(float, 1, "refraction_roughness", none, none) RANGE(0,1)
	 LABELREF(refraction_roughness.label) HSTRETCH;

    refraction_roughness.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(refraction_roughness.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

IOR.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 IOR.label = PARM_LABEL("Index of Refraction", "IOR") WIDTH(1.5);
 PARM(float, 1, "IOR", none, none) RANGE(0,3)
	 LABELREF(IOR.label) HSTRETCH;

    IOR.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(IOR.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Fresnel_use_IOR.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("Fresnel_use_IOR", "Fresnel From IOR") toggle VALUE(Fresnel_use_IOR.val);

    { HSTRETCH }

    Fresnel_use_IOR.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Fresnel_use_IOR.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

transmittance.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    transmittance.label = PARM_LABEL("Transmittance", "transmittance") WIDTH(1.5);
    PARM(float, 3, "transmittance", none, COLOR, "R,G,B") 
	LABELREF(transmittance.label) HSTRETCH;

    transmittance.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(transmittance.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

opacity.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    opacity.label = PARM_LABEL("Opacity", "opacity") WIDTH(1.5);
    PARM(float, 3, "opacity", none, COLOR, "R,G,B") 
	LABELREF(opacity.label) HSTRETCH;

    opacity.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(opacity.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

enable_internal_reflections.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enable_internal_reflections", "Internal Reflections") toggle VALUE(enable_internal_reflections.val);

    { HSTRETCH }

    enable_internal_reflections.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enable_internal_reflections.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

enable_refractive_caustics.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enable_refractive_caustics", "Refractive Caustics") toggle VALUE(enable_refractive_caustics.val);

    { HSTRETCH }

    enable_refractive_caustics.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(enable_refractive_caustics.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

refraction_exit_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    refraction_exit_color.label = PARM_LABEL("Exit Color", "refraction_exit_color") WIDTH(1.5);
    PARM(float, 3, "refraction_exit_color", none, COLOR, "R,G,B") 
	LABELREF(refraction_exit_color.label) HSTRETCH;

    refraction_exit_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(refraction_exit_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

refraction_exit_use_environment.gad = ROW
{
    HSTRETCH

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("refraction_exit_use_environment", "Environment Exit Color") toggle VALUE(refraction_exit_use_environment.val);

    { HSTRETCH }

    refraction_exit_use_environment.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(refraction_exit_use_environment.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

emission_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    emission_color.label = PARM_LABEL("Emission Color", "emission_color") WIDTH(1.5);
    PARM(float, 3, "emission_color", none, COLOR, "R,G,B") 
	LABELREF(emission_color.label) HSTRETCH;

    emission_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(emission_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

emission.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 emission.label = PARM_LABEL("Emission", "emission") WIDTH(1.5);
 PARM(float, 1, "emission", none, none) RANGE(0,1)
	 LABELREF(emission.label) HSTRETCH;

    emission.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(emission.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Ksss_color.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    Ksss_color.label = PARM_LABEL("SSS Color", "Ksss_color") WIDTH(1.5);
    PARM(float, 3, "Ksss_color", none, COLOR, "R,G,B") 
	LABELREF(Ksss_color.label) HSTRETCH;

    Ksss_color.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Ksss_color.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

Ksss.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 Ksss.label = PARM_LABEL("Scattering", "Ksss") WIDTH(1.5);
 PARM(float, 1, "Ksss", none, none) RANGE(0,1)
	 LABELREF(Ksss.label) HSTRETCH;

    Ksss.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(Ksss.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

sss_radius.gad = 
{
    LAYOUT (horizontal) HSTRETCH

    sss_radius.label = PARM_LABEL("SSS Radius", "sss_radius") WIDTH(1.5);
    PARM(float, 3, "sss_radius", none, COLOR, "R,G,B") 
	LABELREF(sss_radius.label) HSTRETCH;

    sss_radius.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(sss_radius.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

aov_direct_diffuse.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    aov_direct_diffuse.label = PARM_LABEL("Direct Diffuse", "aov_direct_diffuse") WIDTH(1.5);
    PARM_FIELD(string, "aov_direct_diffuse") VALUE(aov_direct_diffuse.val) 
	LABELREF(aov_direct_diffuse.label) HSTRETCH;

    aov_direct_diffuse.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aov_direct_diffuse.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

aov_direct_specular.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    aov_direct_specular.label = PARM_LABEL("Direct Specular", "aov_direct_specular") WIDTH(1.5);
    PARM_FIELD(string, "aov_direct_specular") VALUE(aov_direct_specular.val) 
	LABELREF(aov_direct_specular.label) HSTRETCH;

    aov_direct_specular.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aov_direct_specular.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

aov_indirect_diffuse.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    aov_indirect_diffuse.label = PARM_LABEL("Indirect Diffuse", "aov_indirect_diffuse") WIDTH(1.5);
    PARM_FIELD(string, "aov_indirect_diffuse") VALUE(aov_indirect_diffuse.val) 
	LABELREF(aov_indirect_diffuse.label) HSTRETCH;

    aov_indirect_diffuse.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aov_indirect_diffuse.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

aov_indirect_specular.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    aov_indirect_specular.label = PARM_LABEL("Indirect Specular", "aov_indirect_specular") WIDTH(1.5);
    PARM_FIELD(string, "aov_indirect_specular") VALUE(aov_indirect_specular.val) 
	LABELREF(aov_indirect_specular.label) HSTRETCH;

    aov_indirect_specular.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aov_indirect_specular.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

aov_reflection.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    aov_reflection.label = PARM_LABEL("Reflection", "aov_reflection") WIDTH(1.5);
    PARM_FIELD(string, "aov_reflection") VALUE(aov_reflection.val) 
	LABELREF(aov_reflection.label) HSTRETCH;

    aov_reflection.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aov_reflection.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

aov_refraction.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    aov_refraction.label = PARM_LABEL("Refraction", "aov_refraction") WIDTH(1.5);
    PARM_FIELD(string, "aov_refraction") VALUE(aov_refraction.val) 
	LABELREF(aov_refraction.label) HSTRETCH;

    aov_refraction.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aov_refraction.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

aov_refraction_opacity.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    aov_refraction_opacity.label = PARM_LABEL("Refraction Opacity", "aov_refraction_opacity") WIDTH(1.5);
    PARM_FIELD(string, "aov_refraction_opacity") VALUE(aov_refraction_opacity.val) 
	LABELREF(aov_refraction_opacity.label) HSTRETCH;

    aov_refraction_opacity.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aov_refraction_opacity.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

aov_emission.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    aov_emission.label = PARM_LABEL("Emission", "aov_emission") WIDTH(1.5);
    PARM_FIELD(string, "aov_emission") VALUE(aov_emission.val) 
	LABELREF(aov_emission.label) HSTRETCH;

    aov_emission.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aov_emission.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

aov_sss.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    aov_sss.label = PARM_LABEL("SSS", "aov_sss") WIDTH(1.5);
    PARM_FIELD(string, "aov_sss") VALUE(aov_sss.val) 
	LABELREF(aov_sss.label) HSTRETCH;

    aov_sss.exportbtn = PARM_EXPORTBUTTON "SOP_sphere"
	VALUE(aov_sss.export) LOOKFLAT
	HELP("Open Shader Effects menu (Ctrl+LMB to promote this parameter)")
	UI_FLAT_ICON_BTN_SIZE_SMALL;

}

folder1.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG
    { 
	VALUE(folder1.gad.val) STRETCH(1,0)

	TAB "Diffuse"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    Kd_color.gad;		
	    Kd.gad;		
	    direct_diffuse.gad;		
	    indirect_diffuse.gad;		
	    diffuse_roughness.gad;		
	    Kb.gad;		
	    bounce_factor.gad;		
	    Fresnel_affect_diff.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Specular"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    Ks_color.gad;		
	    Ks.gad;		
	    direct_specular.gad;		
	    indirect_specular.gad;		
	    specular_roughness.gad;		
	    specular_anisotropy.gad;		
	    specular_rotation.gad;		
	    enable_glossy_caustics.gad;		
	    specular_Fresnel.gad;		
	    Ksn.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Reflection"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    Kr_color.gad;		
	    Kr.gad;		
	    enable_reflective_caustics.gad;		
	    Fresnel.gad;		
	    Krn.gad;		
	    reflection_exit_color.gad;		
	    reflection_exit_use_environment.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Refraction"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    Kt_color.gad;		
	    Kt.gad;		
	    refraction_roughness.gad;		
	    IOR.gad;		
	    Fresnel_use_IOR.gad;		
	    transmittance.gad;		
	    opacity.gad;		
	    enable_internal_reflections.gad;		
	    enable_refractive_caustics.gad;		
	    refraction_exit_color.gad;		
	    refraction_exit_use_environment.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Emission"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    emission_color.gad;		
	    emission.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "SSS"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    Ksss_color.gad;		
	    Ksss.gad;		
	    sss_radius.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "AOVs"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    aov_direct_diffuse.gad;		
	    aov_direct_specular.gad;		
	    aov_indirect_diffuse.gad;		
	    aov_indirect_specular.gad;		
	    aov_reflection.gad;		
	    aov_refraction.gad;		
	    aov_refraction_opacity.gad;		
	    aov_emission.gad;		
	    aov_sss.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH LOOK(plain) 
    folder1.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
